<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="owl2vowl.knowledgebase.dao.KwDocumentPageviewMapper">
  <resultMap id="BaseResultMap" type="owl2vowl.knowledgebase.entity.KwDocumentPageview">
    <result column="PAGEVIEW_ID" jdbcType="INTEGER" property="pageviewId" />
    <result column="DOCUMENT_ID" jdbcType="INTEGER" property="documentId" />
    <result column="DOCUMENT_NAME" jdbcType="VARCHAR" property="documentName" />
    <result column="PAGEVIEW_TIME" jdbcType="DATE" property="pageviewTime" />
    <result column="PAGEVIEW_IP" jdbcType="VARCHAR" property="pageviewIp" />
    <result column="DOCUMENT_SAVEURL" jdbcType="VARCHAR" property="documentSaveurl" />
    <result column="DEPARTMENT_NAME" jdbcType="VARCHAR" property="departmentName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PAGEVIEW_ID, DOCUMENT_ID, DOCUMENT_NAME, PAGEVIEW_TIME, PAGEVIEW_IP
  </sql>
  <select id="selectByExample" parameterType="owl2vowl.knowledgebase.entity.KwDocumentPageviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kw_document_pageview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="owl2vowl.knowledgebase.entity.KwDocumentPageviewExample">
    delete from kw_document_pageview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="owl2vowl.knowledgebase.entity.KwDocumentPageview">
    insert into kw_document_pageview (PAGEVIEW_ID, DOCUMENT_ID, DOCUMENT_NAME, 
      PAGEVIEW_TIME, PAGEVIEW_IP,DEPARTMENT_NAME)
    values (#{pageviewId,jdbcType=INTEGER}, #{documentId,jdbcType=INTEGER}, #{documentName,jdbcType=VARCHAR}, 
      #{pageviewTime,jdbcType=DATE}, #{pageviewIp,jdbcType=VARCHAR},#{departmentName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="owl2vowl.knowledgebase.entity.KwDocumentPageview">
    insert into kw_document_pageview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pageviewId != null">
        PAGEVIEW_ID,
      </if>
      <if test="documentId != null">
        DOCUMENT_ID,
      </if>
      <if test="documentName != null">
        DOCUMENT_NAME,
      </if>
      <if test="pageviewTime != null">
        PAGEVIEW_TIME,
      </if>
      <if test="pageviewIp != null">
        PAGEVIEW_IP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pageviewId != null">
        #{pageviewId,jdbcType=INTEGER},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=INTEGER},
      </if>
      <if test="documentName != null">
        #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="pageviewTime != null">
        #{pageviewTime,jdbcType=DATE},
      </if>
      <if test="pageviewIp != null">
        #{pageviewIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="owl2vowl.knowledgebase.entity.KwDocumentPageviewExample" resultType="java.lang.Long">
    select count(*) from kw_document_pageview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kw_document_pageview
    <set>
      <if test="record.pageviewId != null">
        PAGEVIEW_ID = #{record.pageviewId,jdbcType=INTEGER},
      </if>
      <if test="record.documentId != null">
        DOCUMENT_ID = #{record.documentId,jdbcType=INTEGER},
      </if>
      <if test="record.documentName != null">
        DOCUMENT_NAME = #{record.documentName,jdbcType=VARCHAR},
      </if>
      <if test="record.pageviewTime != null">
        PAGEVIEW_TIME = #{record.pageviewTime,jdbcType=DATE},
      </if>
      <if test="record.pageviewIp != null">
        PAGEVIEW_IP = #{record.pageviewIp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kw_document_pageview
    set PAGEVIEW_ID = #{record.pageviewId,jdbcType=INTEGER},
      DOCUMENT_ID = #{record.documentId,jdbcType=INTEGER},
      DOCUMENT_NAME = #{record.documentName,jdbcType=VARCHAR},
      PAGEVIEW_TIME = #{record.pageviewTime,jdbcType=DATE},
      PAGEVIEW_IP = #{record.pageviewIp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!--推荐记录展示查询-->
  <select id="selectKwDocumentPageviewUserRecords" parameterType="owl2vowl.knowledgebase.entity.KwDocumentPageview" resultMap="BaseResultMap">
    select
    a.PAGEVIEW_ID,a.DOCUMENT_ID,a.DOCUMENT_NAME,a.PAGEVIEW_TIME,
    a.PAGEVIEW_IP,b.DOCUMENT_SAVEURL from kw_document_pageview  a
    left JOIN
    kw_document  b
    on a.DOCUMENT_ID = b.DOCUMENT_ID
    where 1=1
    and a.PAGEVIEW_IP = #{pageviewIp,jdbcType=VARCHAR}
    and a.DEPARTMENT_NAME = #{departmentName,jdbcType=VARCHAR}
    order by a.PAGEVIEW_TIME desc
    limit 3
  </select>
</mapper>