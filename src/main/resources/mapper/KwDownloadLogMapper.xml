<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="owl2vowl.knowledgebase.dao.KwDownloadLogMapper">
  <resultMap id="BaseResultMap" type="owl2vowl.knowledgebase.entity.KwDownloadLog">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="DOWN_TIME" jdbcType="DATE" property="downTime" />
    <result column="FILE_TYPE" jdbcType="VARCHAR" property="fileType" />
    <result column="SIZE" jdbcType="INTEGER" property="size" />
    <result column="DOWNLOAD_USERNAME" jdbcType="VARCHAR" property="downloadUsername" />
    <result column="DOWNLOAD_USERID" jdbcType="INTEGER" property="downloadUserid" />
    <result column="FILE_ID" jdbcType="INTEGER" property="fileId" />
    <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
    <result column="DOCUMENT_TYPE" jdbcType="VARCHAR" property="documentType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, DOWN_TIME, FILE_TYPE, SIZE, DOWNLOAD_USERNAME, DOWNLOAD_USERID, FILE_ID, FILE_NAME, 
    DOCUMENT_TYPE
  </sql>
  <select id="selectByExample" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kw_download_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kw_download_log
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kw_download_log
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLogExample">
    delete from kw_download_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLog">
    insert into kw_download_log (ID, DOWN_TIME, FILE_TYPE, 
      SIZE, DOWNLOAD_USERNAME, DOWNLOAD_USERID, 
      FILE_ID, FILE_NAME, DOCUMENT_TYPE
      )
    values (#{id,jdbcType=INTEGER}, #{downTime,jdbcType=DATE}, #{fileType,jdbcType=VARCHAR}, 
      #{size,jdbcType=INTEGER}, #{downloadUsername,jdbcType=VARCHAR}, #{downloadUserid,jdbcType=INTEGER}, 
      #{fileId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{documentType,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLog">
    insert into kw_download_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="downTime != null">
        DOWN_TIME,
      </if>
      <if test="fileType != null">
        FILE_TYPE,
      </if>
      <if test="size != null">
        SIZE,
      </if>
      <if test="downloadUsername != null">
        DOWNLOAD_USERNAME,
      </if>
      <if test="downloadUserid != null">
        DOWNLOAD_USERID,
      </if>
      <if test="fileId != null">
        FILE_ID,
      </if>
      <if test="fileName != null">
        FILE_NAME,
      </if>
      <if test="documentType != null">
        DOCUMENT_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="downTime != null">
        #{downTime,jdbcType=DATE},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="downloadUsername != null">
        #{downloadUsername,jdbcType=VARCHAR},
      </if>
      <if test="downloadUserid != null">
        #{downloadUserid,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="documentType != null">
        #{documentType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLogExample" resultType="java.lang.Long">
    select count(*) from kw_download_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kw_download_log
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.downTime != null">
        DOWN_TIME = #{record.downTime,jdbcType=DATE},
      </if>
      <if test="record.fileType != null">
        FILE_TYPE = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        SIZE = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.downloadUsername != null">
        DOWNLOAD_USERNAME = #{record.downloadUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.downloadUserid != null">
        DOWNLOAD_USERID = #{record.downloadUserid,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null">
        FILE_ID = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null">
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.documentType != null">
        DOCUMENT_TYPE = #{record.documentType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kw_download_log
    set ID = #{record.id,jdbcType=INTEGER},
      DOWN_TIME = #{record.downTime,jdbcType=DATE},
      FILE_TYPE = #{record.fileType,jdbcType=VARCHAR},
      SIZE = #{record.size,jdbcType=INTEGER},
      DOWNLOAD_USERNAME = #{record.downloadUsername,jdbcType=VARCHAR},
      DOWNLOAD_USERID = #{record.downloadUserid,jdbcType=INTEGER},
      FILE_ID = #{record.fileId,jdbcType=INTEGER},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      DOCUMENT_TYPE = #{record.documentType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLog">
    update kw_download_log
    <set>
      <if test="downTime != null">
        DOWN_TIME = #{downTime,jdbcType=DATE},
      </if>
      <if test="fileType != null">
        FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        SIZE = #{size,jdbcType=INTEGER},
      </if>
      <if test="downloadUsername != null">
        DOWNLOAD_USERNAME = #{downloadUsername,jdbcType=VARCHAR},
      </if>
      <if test="downloadUserid != null">
        DOWNLOAD_USERID = #{downloadUserid,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        FILE_ID = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="documentType != null">
        DOCUMENT_TYPE = #{documentType,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="owl2vowl.knowledgebase.entity.KwDownloadLog">
    update kw_download_log
    set DOWN_TIME = #{downTime,jdbcType=DATE},
      FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      SIZE = #{size,jdbcType=INTEGER},
      DOWNLOAD_USERNAME = #{downloadUsername,jdbcType=VARCHAR},
      DOWNLOAD_USERID = #{downloadUserid,jdbcType=INTEGER},
      FILE_ID = #{fileId,jdbcType=INTEGER},
      FILE_NAME = #{fileName,jdbcType=VARCHAR},
      DOCUMENT_TYPE = #{documentType,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>