<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="owl2vowl.knowledgebase.dao.kwDocumentReleaseMapper">
  <resultMap id="BaseResultMap" type="owl2vowl.knowledgebase.entity.kwDocumentRelease">
    <id column="RELEASE_ID" jdbcType="INTEGER" property="releaseId" />
    <result column="DOCUMENT_ID" jdbcType="INTEGER" property="documentId" />
    <result column="RELEASE_FROM_USERID" jdbcType="VARCHAR" property="releaseFromUserid" />
    <result column="RELEASE_FROM_USERNAME" jdbcType="VARCHAR" property="releaseFromUsername" />
    <result column="RELEASE_TO_DETPID" jdbcType="VARCHAR" property="releaseToDetpid" />
    <result column="RELEASE_DETPNAME" jdbcType="VARCHAR" property="releaseDetpname" />
    <result column="RELEASE_TO_USERID" jdbcType="VARCHAR" property="releaseToUserid" />
    <result column="RELEASE_TO_USERNAME" jdbcType="VARCHAR" property="releaseToUsername" />
    <result column="RELEASE_DATE" jdbcType="DATE" property="releaseDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RELEASE_ID, DOCUMENT_ID, RELEASE_FROM_USERID, RELEASE_FROM_USERNAME, RELEASE_TO_DETPID, 
    RELEASE_DETPNAME, RELEASE_TO_USERID, RELEASE_TO_USERNAME, RELEASE_DATE
  </sql>
  <select id="selectByExample" parameterType="owl2vowl.knowledgebase.entity.kwDocumentReleaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kw_document_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kw_document_release
    where RELEASE_ID = #{releaseId,jdbcType=INTEGER}
  </select>
	
	<!-- 根据documentId 查询已经发布过的部门 -->
	<select id="queryDeptIdListByDocumentId" parameterType="java.lang.Integer"  resultType="String">
		SELECT
			RELEASE_TO_DETPID as deptid
		FROM
			kw_document_release
		WHERE
			RELEASE_TO_DETPID IS NOT NULL
			AND RELEASE_DETPNAME IS NOT NULL
			AND RELEASE_TO_USERID IS NULL
			AND RELEASE_TO_USERNAME IS NULL
			<if test="documentId != null">
				AND DOCUMENT_ID =  #{documentId,jdbcType=INTEGER}
			</if>
	</select>
	<!-- 根据documentId 查询已经发布过的用户 -->
	<select id="queryUserIdListByDocumentId" parameterType="java.lang.Integer" resultType="String">
		SELECT
			RELEASE_TO_USERID AS userid 
		FROM
			KW_DOCUMENT_RELEASE 
		WHERE
			RELEASE_TO_DETPID IS NULL 
			AND RELEASE_DETPNAME IS NULL 
			AND RELEASE_TO_USERID IS NOT NULL 
			AND RELEASE_TO_USERNAME IS NOT NULL
			<if test="documentId != null">
				AND DOCUMENT_ID =  #{documentId,jdbcType=INTEGER}
			</if>
	</select> 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kw_document_release
    where RELEASE_ID = #{releaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="owl2vowl.knowledgebase.entity.kwDocumentReleaseExample">
    delete from kw_document_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="owl2vowl.knowledgebase.entity.kwDocumentRelease">
    insert into kw_document_release (RELEASE_ID, DOCUMENT_ID, RELEASE_FROM_USERID, 
      RELEASE_FROM_USERNAME, RELEASE_TO_DETPID, RELEASE_DETPNAME, 
      RELEASE_TO_USERID, RELEASE_TO_USERNAME, RELEASE_DATE
      )
    values (#{releaseId,jdbcType=INTEGER}, #{documentId,jdbcType=INTEGER}, #{releaseFromUserid,jdbcType=VARCHAR}, 
      #{releaseFromUsername,jdbcType=VARCHAR}, #{releaseToDetpid,jdbcType=VARCHAR}, #{releaseDetpname,jdbcType=VARCHAR}, 
      #{releaseToUserid,jdbcType=VARCHAR}, #{releaseToUsername,jdbcType=VARCHAR}, #{releaseDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="owl2vowl.knowledgebase.entity.kwDocumentRelease">
    insert into kw_document_release
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="releaseId != null">
        RELEASE_ID,
      </if>
      <if test="documentId != null">
        DOCUMENT_ID,
      </if>
      <if test="releaseFromUserid != null">
        RELEASE_FROM_USERID,
      </if>
      <if test="releaseFromUsername != null">
        RELEASE_FROM_USERNAME,
      </if>
      <if test="releaseToDetpid != null">
        RELEASE_TO_DETPID,
      </if>
      <if test="releaseDetpname != null">
        RELEASE_DETPNAME,
      </if>
      <if test="releaseToUserid != null">
        RELEASE_TO_USERID,
      </if>
      <if test="releaseToUsername != null">
        RELEASE_TO_USERNAME,
      </if>
      <if test="releaseDate != null">
        RELEASE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="releaseId != null">
        #{releaseId,jdbcType=INTEGER},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=INTEGER},
      </if>
      <if test="releaseFromUserid != null">
        #{releaseFromUserid,jdbcType=VARCHAR},
      </if>
      <if test="releaseFromUsername != null">
        #{releaseFromUsername,jdbcType=VARCHAR},
      </if>
      <if test="releaseToDetpid != null">
        #{releaseToDetpid,jdbcType=VARCHAR},
      </if>
      <if test="releaseDetpname != null">
        #{releaseDetpname,jdbcType=VARCHAR},
      </if>
      <if test="releaseToUserid != null">
        #{releaseToUserid,jdbcType=VARCHAR},
      </if>
      <if test="releaseToUsername != null">
        #{releaseToUsername,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="owl2vowl.knowledgebase.entity.kwDocumentReleaseExample" resultType="java.lang.Long">
    select count(*) from kw_document_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kw_document_release
    <set>
      <if test="record.releaseId != null">
        RELEASE_ID = #{record.releaseId,jdbcType=INTEGER},
      </if>
      <if test="record.documentId != null">
        DOCUMENT_ID = #{record.documentId,jdbcType=INTEGER},
      </if>
      <if test="record.releaseFromUserid != null">
        RELEASE_FROM_USERID = #{record.releaseFromUserid,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseFromUsername != null">
        RELEASE_FROM_USERNAME = #{record.releaseFromUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseToDetpid != null">
        RELEASE_TO_DETPID = #{record.releaseToDetpid,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseDetpname != null">
        RELEASE_DETPNAME = #{record.releaseDetpname,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseToUserid != null">
        RELEASE_TO_USERID = #{record.releaseToUserid,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseToUsername != null">
        RELEASE_TO_USERNAME = #{record.releaseToUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseDate != null">
        RELEASE_DATE = #{record.releaseDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kw_document_release
    set RELEASE_ID = #{record.releaseId,jdbcType=INTEGER},
      DOCUMENT_ID = #{record.documentId,jdbcType=INTEGER},
      RELEASE_FROM_USERID = #{record.releaseFromUserid,jdbcType=VARCHAR},
      RELEASE_FROM_USERNAME = #{record.releaseFromUsername,jdbcType=VARCHAR},
      RELEASE_TO_DETPID = #{record.releaseToDetpid,jdbcType=VARCHAR},
      RELEASE_DETPNAME = #{record.releaseDetpname,jdbcType=VARCHAR},
      RELEASE_TO_USERID = #{record.releaseToUserid,jdbcType=VARCHAR},
      RELEASE_TO_USERNAME = #{record.releaseToUsername,jdbcType=VARCHAR},
      RELEASE_DATE = #{record.releaseDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="owl2vowl.knowledgebase.entity.kwDocumentRelease">
    update kw_document_release
    <set>
      <if test="documentId != null">
        DOCUMENT_ID = #{documentId,jdbcType=INTEGER},
      </if>
      <if test="releaseFromUserid != null">
        RELEASE_FROM_USERID = #{releaseFromUserid,jdbcType=VARCHAR},
      </if>
      <if test="releaseFromUsername != null">
        RELEASE_FROM_USERNAME = #{releaseFromUsername,jdbcType=VARCHAR},
      </if>
      <if test="releaseToDetpid != null">
        RELEASE_TO_DETPID = #{releaseToDetpid,jdbcType=VARCHAR},
      </if>
      <if test="releaseDetpname != null">
        RELEASE_DETPNAME = #{releaseDetpname,jdbcType=VARCHAR},
      </if>
      <if test="releaseToUserid != null">
        RELEASE_TO_USERID = #{releaseToUserid,jdbcType=VARCHAR},
      </if>
      <if test="releaseToUsername != null">
        RELEASE_TO_USERNAME = #{releaseToUsername,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        RELEASE_DATE = #{releaseDate,jdbcType=DATE},
      </if>
    </set>
    where RELEASE_ID = #{releaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="owl2vowl.knowledgebase.entity.kwDocumentRelease">
    update kw_document_release
    set DOCUMENT_ID = #{documentId,jdbcType=INTEGER},
      RELEASE_FROM_USERID = #{releaseFromUserid,jdbcType=VARCHAR},
      RELEASE_FROM_USERNAME = #{releaseFromUsername,jdbcType=VARCHAR},
      RELEASE_TO_DETPID = #{releaseToDetpid,jdbcType=VARCHAR},
      RELEASE_DETPNAME = #{releaseDetpname,jdbcType=VARCHAR},
      RELEASE_TO_USERID = #{releaseToUserid,jdbcType=VARCHAR},
      RELEASE_TO_USERNAME = #{releaseToUsername,jdbcType=VARCHAR},
      RELEASE_DATE = #{releaseDate,jdbcType=DATE}
    where RELEASE_ID = #{releaseId,jdbcType=INTEGER}
  </update>
</mapper>